{"ast":null,"code":"var _jsxFileName = \"/Users/satokota/Desktop/programming/react/complete-tutorial/05_state_and_event/src/090_practice_state_props/start/Example.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Example = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u7DF4\\u7FD2\\u554F\\u984C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u30AB\\u30A6\\u30F3\\u30C8\\u306E\\u66F4\\u65B0\\uFF08CountUpdate\\uFF09\\u3068\\u8868\\u793A\\uFF08CountResult\\uFF09\\u3092\\u5225\\u306E\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u306B\\u5206\\u96E2\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002Example\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u5185\\u3067\\u73FE\\u5728\\u306E\\u30AB\\u30A6\\u30F3\\u30C8\\u306E\\u5024\\u3092\\u7BA1\\u7406\\u3059\\u308Bstate\\u3092\\u4E00\\u3064\\u5B9A\\u7FA9\\u3057\\u3066\\u3053\\u308C\\u307E\\u3067\\u306E\\u30EC\\u30AF\\u30C1\\u30E3\\u30FC\\u3067\\u5B9F\\u88C5\\u3057\\u305F\\u3088\\u3046\\u306A\\u30AB\\u30A6\\u30F3\\u30BF\\u30FC\\u3092\\u4F5C\\u6210\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CountResult, {\n      title: \"\\u30AB\\u30A6\\u30F3\\u30C8\",\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CountUpdate, {\n      count: count,\n      setCount: setCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Example, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = Example;\n\nconst CountResult = _ref => {\n  let {\n    count\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 36\n  }, this);\n};\n\n_c2 = CountResult;\n\nconst CountUpdate = _ref2 => {\n  let {\n    count,\n    setCount\n  } = _ref2;\n\n  const countUp = () => {\n    setCount(count + 1);\n  };\n\n  const countDown = () => {\n    setCount(count + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countUp,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countDown,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = CountUpdate;\nexport default Example;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Example\");\n$RefreshReg$(_c2, \"CountResult\");\n$RefreshReg$(_c3, \"CountUpdate\");","map":{"version":3,"names":["Example","count","setCount","useState","CountResult","CountUpdate","countUp","countDown"],"sources":["/Users/satokota/Desktop/programming/react/complete-tutorial/05_state_and_event/src/090_practice_state_props/start/Example.js"],"sourcesContent":["\nconst Example = () => {\n    const [count, setCount] = useState(0);\n    return (\n        <>\n            <h3>練習問題</h3>\n            <p>カウントの更新（CountUpdate）と表示（CountResult）を別のコンポーネントに分離してください。Exampleコンポーネント内で現在のカウントの値を管理するstateを一つ定義してこれまでのレクチャーで実装したようなカウンターを作成してください。</p>\n            <CountResult title=\"カウント\" count={count} />\n            <CountUpdate count={count} setCount={setCount} />\n        </>\n    );\n};\nconst CountResult = ({ count }) => <h3>{count}</h3>\n\nconst CountUpdate = ({ count, setCount }) => {\n    const countUp = () => {\n        setCount(count + 1);\n    };\n    const countDown = () => {\n        setCount(count + 1);\n    };\n    return (\n        <>\n            <button onClick={countUp}>+</button>\n            <button onClick={countDown}>-</button>\n        </>\n    );\n};\n\nexport default Example;\n"],"mappings":";;;;;;AACA,MAAMA,OAAO,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,CAAD,CAAlC;EACA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,WAAD;MAAa,KAAK,EAAC,0BAAnB;MAA0B,KAAK,EAAEF;IAAjC;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII,QAAC,WAAD;MAAa,KAAK,EAAEA,KAApB;MAA2B,QAAQ,EAAEC;IAArC;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA,gBADJ;AAQH,CAVD;;GAAMF,O;;KAAAA,O;;AAWN,MAAMI,WAAW,GAAG;EAAA,IAAC;IAAEH;EAAF,CAAD;EAAA,oBAAe;IAAA,UAAKA;EAAL;IAAA;IAAA;IAAA;EAAA,QAAf;AAAA,CAApB;;MAAMG,W;;AAEN,MAAMC,WAAW,GAAG,SAAyB;EAAA,IAAxB;IAAEJ,KAAF;IAASC;EAAT,CAAwB;;EACzC,MAAMI,OAAO,GAAG,MAAM;IAClBJ,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;EACH,CAFD;;EAGA,MAAMM,SAAS,GAAG,MAAM;IACpBL,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;EACH,CAFD;;EAGA,oBACI;IAAA,wBACI;MAAQ,OAAO,EAAEK,OAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,OAAO,EAAEC,SAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAMH,CAbD;;MAAMF,W;AAeN,eAAeL,OAAf"},"metadata":{},"sourceType":"module"}