{"ast":null,"code":"var _jsxFileName = \"/Users/satokota/Desktop/programming/react/complete-tutorial/04_react_basic/src/080_expr_in_jsx/end/components/Expression.js\";\n\n/* POINT JSX には JavaScript 式を記述できる\nJSX 内の 波括弧 {...} で囲んだ部分は JavaScript 式として実行時に評価されます。\n */\nimport \"./Expression.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expression = () => {\n  const title = \"Expression\";\n  const arry = [\"item1\", \"item2\", \"item3\"];\n\n  const hello = arg => `${arg} Function`;\n\n  const jsx = /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Hello JSX\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 17\n  }, this);\n\n  console.log(jsx);\n  return (\n    /*#__PURE__*/\n    // POINT {...} は属性値にも使用できます。\n    _jsxDEV(\"div\", {\n      className: title.toLowerCase(),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Hello \" + title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: arry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: hello(\"Hello\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Hello JSX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this), jsx]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_c = Expression;\nexport default Expression;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expression\");","map":{"version":3,"names":["Expression","title","arry","hello","arg","jsx","console","log","toLowerCase"],"sources":["/Users/satokota/Desktop/programming/react/complete-tutorial/04_react_basic/src/080_expr_in_jsx/end/components/Expression.js"],"sourcesContent":["/* POINT JSX には JavaScript 式を記述できる\nJSX 内の 波括弧 {...} で囲んだ部分は JavaScript 式として実行時に評価されます。\n */\nimport \"./Expression.css\";\n\nconst Expression = () => {\n\n    const title = \"Expression\";\n    const arry = [\"item1\", \"item2\", \"item3\"];\n    const hello = (arg) => `${arg} Function`;\n    const jsx = <h3>Hello JSX</h3>;\n\n    console.log(jsx);\n\n    return (\n        // POINT {...} は属性値にも使用できます。\n        <div className={title.toLowerCase()}>\n            {/* POINT 波括弧内は実行時に評価されます。 */}\n            <h3>{\"Hello \" + title}</h3>\n            {/* POINT 配列を子要素に指定すると配列の要素が値の列として展開されます。 */}\n            <h3>{arry}</h3>\n            {/* POINT 関数を呼び出して return した値を埋め込むこともできます。 */}\n            <h3>{hello(\"Hello\")}</h3>\n            {/* POINT 波括弧内に JSX を記述することもできます。*/}\n            {<h3>Hello JSX</h3>}\n            {/* POINT 変数に代入したJSXも埋め込めます。 */}\n            {jsx}\n        </div>\n    );\n};\n\nexport default Expression;\n"],"mappings":";;AAAA;AACA;AACA;AACA,OAAO,kBAAP;;;AAEA,MAAMA,UAAU,GAAG,MAAM;EAErB,MAAMC,KAAK,GAAG,YAAd;EACA,MAAMC,IAAI,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAAb;;EACA,MAAMC,KAAK,GAAIC,GAAD,IAAU,GAAEA,GAAI,WAA9B;;EACA,MAAMC,GAAG,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAZ;;EAEAC,OAAO,CAACC,GAAR,CAAYF,GAAZ;EAEA;IAAA;IACI;IACA;MAAK,SAAS,EAAEJ,KAAK,CAACO,WAAN,EAAhB;MAAA,wBAEI;QAAA,UAAK,WAAWP;MAAhB;QAAA;QAAA;QAAA;MAAA,QAFJ,eAII;QAAA,UAAKC;MAAL;QAAA;QAAA;QAAA;MAAA,QAJJ,eAMI;QAAA,UAAKC,KAAK,CAAC,OAAD;MAAV;QAAA;QAAA;QAAA;MAAA,QANJ,eAQK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARL,EAUKE,GAVL;IAAA;MAAA;MAAA;MAAA;IAAA;EAFJ;AAeH,CAxBD;;KAAML,U;AA0BN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}